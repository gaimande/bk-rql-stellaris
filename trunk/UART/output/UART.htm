<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Wed Oct 03 16:34:33 2012
<BR><P>
<H3>Maximum Stack Usage =        136 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; UARTprintf &rArr; UARTwrite
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[21ae61c]">Reset_Handler</a>
 <LI><a href="#[21ae7fc]">NmiSR</a>
 <LI><a href="#[21ae7c0]">FaultISR</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[21a96e4]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21a96e4]">UARTCharPut</a><BR>
 <LI><a href="#[21a9798]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21a9798]">SysCtlDelay</a><BR>
 <LI><a href="#[21ae7fc]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21ae7fc]">NmiSR</a><BR>
 <LI><a href="#[21ae7c0]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21ae7c0]">FaultISR</a><BR>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21ae784]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[21ae61c]">Reset_Handler</a>
 <LI><a href="#[21ae7fc]">NmiSR</a>
 <LI><a href="#[21ae7c0]">FaultISR</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae5a4]">UARTIntHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21ae784]">IntDefaultHandler</a>
 <LI><a href="#[21a99f0]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21ae61c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[332bc6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[332bc6c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[21ae61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[332a358]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[332a22c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[332932c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[332a1f0]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[332932c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[332a100]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[21a9798]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[21a9798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[21a9798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[21a9b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyMatrix
</UL>

<P><STRONG><a name="[21a0300]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[332c644]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[21a02c4]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[21a97d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[33317d4]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[21a033c]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[21a0378]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[332932c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[332a1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[332a22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[33292f0]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3328bac]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[3328b70]"></a>__decompress2</STRONG> (Thumb, 96 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[21aa080]"></a>GLCD_CHAR_CLR</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, uart.o(i.GLCD_CHAR_CLR))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GLCD_CHAR_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[21a9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_STR
<LI><a href="#[21a9cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DEC
</UL>

<P><STRONG><a name="[21aa044]"></a>GLCD_CHAR_SET</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, uart.o(i.GLCD_CHAR_SET))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GLCD_CHAR_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[21a9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_STR
<LI><a href="#[21a9cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DEC
</UL>

<P><STRONG><a name="[21aa008]"></a>GLCD_CS1_ENABLE</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uart.o(i.GLCD_CS1_ENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_CS1_ENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[21a9810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[21a9f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[21a9fcc]"></a>GLCD_CS2_ENABLE</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uart.o(i.GLCD_CS2_ENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_CS2_ENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[21a9810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[21a9f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[21a9f90]"></a>GLCD_DISPLAY</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, uart.o(i.GLCD_DISPLAY))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GLCD_DISPLAY &rArr; GLCD_OUT_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[21a9810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[21a9cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[21a9d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[21a9fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS2_ENABLE
<LI><a href="#[21aa008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS1_ENABLE
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a9db0]"></a>GLCD_IMAGE</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, uart.o(i.GLCD_IMAGE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_IMAGE
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a9d74]"></a>GLCD_INIT</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, uart.o(i.GLCD_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GLCD_INIT &rArr; GLCD_OUT_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[21a975c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[21a9810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[21a9888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[21a9d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a9d38]"></a>GLCD_OUT_CMD</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, uart.o(i.GLCD_OUT_CMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GLCD_OUT_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[21a9810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[21a9d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[21a9f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[21a9cfc]"></a>GLCD_OUT_DATA</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, uart.o(i.GLCD_OUT_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GLCD_OUT_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[21a9810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[21a9f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[21a9cc0]"></a>GLCD_OUT_DEC</STRONG> (Thumb, 122 bytes, Stack size 28 bytes, uart.o(i.GLCD_OUT_DEC))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GLCD_OUT_DEC &rArr; GLCD_CHAR_SET
</UL>
<BR>[Calls]<UL><LI><a href="#[21aa044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CHAR_SET
<LI><a href="#[21aa080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CHAR_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a9c84]"></a>GLCD_OUT_STR</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, uart.o(i.GLCD_OUT_STR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GLCD_OUT_STR &rArr; GLCD_CHAR_SET
</UL>
<BR>[Calls]<UL><LI><a href="#[21aa044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CHAR_SET
<LI><a href="#[21aa080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CHAR_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a99b4]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[21a9888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[21a98c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[21a9978]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[21a9888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[21a98c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a993c]"></a>GPIOPinConfigure</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a9900]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[21a9b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyMatrix
</UL>

<P><STRONG><a name="[21a98c4]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[21a9978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[21a99b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a9888]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[21a9978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[21a99b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[21a9d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[21a9810]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[21a9b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyMatrix
<LI><a href="#[21a9cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[21a9d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[21a9d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[21a9f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
<LI><a href="#[21a9fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS2_ENABLE
<LI><a href="#[21aa008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS1_ENABLE
<LI><a href="#[21ae5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[21a97d4]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[21a02c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a9b94]"></a>ScanKeyMatrix</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, uart.o(i.ScanKeyMatrix))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ScanKeyMatrix
</UL>
<BR>[Calls]<UL><LI><a href="#[21a9798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[21a9810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[21a9900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a975c]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[21a9d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[21a9720]"></a>UARTCharGetNonBlocking</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UARTCharGetNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[21ae5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[21a96e4]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[21a96e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[21a96e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21ae5a4]"></a>UARTIntHandler</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, uart.o(i.UARTIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[21a9720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGetNonBlocking
<LI><a href="#[21a9810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[21a96a8]"></a>UARTStdioInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uartstdio.o(i.UARTStdioInit))
<BR><BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a7c2c]"></a>UARTStdioInitExpClk</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioInitExpClk), UNUSED)

<P><STRONG><a name="[21a966c]"></a>UARTprintf</STRONG> (Thumb, 428 bytes, Stack size 72 bytes, uartstdio.o(i.UARTprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[21a7b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a7b78]"></a>UARTwrite</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, uartstdio.o(i.UARTwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[21a966c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[3328d14]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[3328cd8]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3328c9c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[21a9ae0]"></a>clear_data</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(i.clear_data))
<BR><BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[21a9a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_num
</UL>

<P><STRONG><a name="[21a9a2c]"></a>enter_num</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, uart.o(i.enter_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = enter_num
</UL>
<BR>[Calls]<UL><LI><a href="#[21a9ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_data
</UL>
<BR>[Called By]<UL><LI><a href="#[21a99f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21a99f0]"></a>main</STRONG> (Thumb, 1624 bytes, Stack size 40 bytes, uart.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[21a966c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[21a96a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
<LI><a href="#[21a96e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[21a9798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[21a97d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[21a9888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[21a98c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[21a993c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[21a9978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[21a9a2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_num
<LI><a href="#[21a9ae0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_data
<LI><a href="#[21a9b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyMatrix
<LI><a href="#[21a9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_STR
<LI><a href="#[21a9cc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DEC
<LI><a href="#[21a9d74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[21a9db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_IMAGE
<LI><a href="#[21a9f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[21ae7fc]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[21ae7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[21ae7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[21ae7c0]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[21ae7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[21ae7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[21ae784]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[21ae784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21ae784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
