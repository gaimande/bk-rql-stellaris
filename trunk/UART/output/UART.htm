<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Wed Oct 03 09:46:30 2012
<BR><P>
<H3>Maximum Stack Usage =         72 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; GLCD_OUT_DEC &rArr; GLCD_CHAR_SET
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[20be61c]">Reset_Handler</a>
 <LI><a href="#[20be7fc]">NmiSR</a>
 <LI><a href="#[20be7c0]">FaultISR</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[20be7fc]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20be7fc]">NmiSR</a><BR>
 <LI><a href="#[20be7c0]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20be7c0]">FaultISR</a><BR>
 <LI><a href="#[20be784]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20be784]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20be61c]">Reset_Handler</a>
 <LI><a href="#[20be7fc]">NmiSR</a>
 <LI><a href="#[20be7c0]">FaultISR</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be5a4]">UARTIntHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20be784]">IntDefaultHandler</a>
 <LI><a href="#[20b9e64]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20be61c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3359644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3359644]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[20be61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[3357d30]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[3357c04]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3356d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3357bc8]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[3356d04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3357ad8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[20b0d14]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[335a01c]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[20b0cd8]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[20b9c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[335f1e8]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[20b0d50]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[20b0d8c]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[3356d04]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3357bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[3357c04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[3356cc8]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[20ba47c]"></a>GLCD_CHAR_CLR</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, uart.o(i.GLCD_CHAR_CLR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GLCD_CHAR_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[20ba080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_STR
<LI><a href="#[20ba0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DEC
</UL>

<P><STRONG><a name="[20ba440]"></a>GLCD_CHAR_SET</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, uart.o(i.GLCD_CHAR_SET))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GLCD_CHAR_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[20ba080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_STR
<LI><a href="#[20ba0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DEC
</UL>

<P><STRONG><a name="[20ba404]"></a>GLCD_CS1_ENABLE</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uart.o(i.GLCD_CS1_ENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_CS1_ENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[20b9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[20ba38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[20ba3c8]"></a>GLCD_CS2_ENABLE</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uart.o(i.GLCD_CS2_ENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_CS2_ENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[20b9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[20ba38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[20ba38c]"></a>GLCD_DISPLAY</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, uart.o(i.GLCD_DISPLAY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GLCD_DISPLAY &rArr; GLCD_OUT_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[20b9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[20ba0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[20ba134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[20ba3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS2_ENABLE
<LI><a href="#[20ba404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS1_ENABLE
</UL>
<BR>[Called By]<UL><LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20ba1e8]"></a>GLCD_FILL</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, uart.o(i.GLCD_FILL))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GLCD_FILL &rArr; GLCD_POINT_DRW
</UL>
<BR>[Calls]<UL><LI><a href="#[20ba008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_DRW
<LI><a href="#[20ba044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20ba170]"></a>GLCD_INIT</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, uart.o(i.GLCD_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GLCD_INIT &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[20b9bd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[20b9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[20b9cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[20b9edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayTime
<LI><a href="#[20ba134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20ba134]"></a>GLCD_OUT_CMD</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, uart.o(i.GLCD_OUT_CMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_OUT_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[20b9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[20b9edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[20ba170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[20ba38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[20ba0f8]"></a>GLCD_OUT_DATA</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, uart.o(i.GLCD_OUT_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_OUT_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[20b9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[20b9edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[20ba38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[20ba0bc]"></a>GLCD_OUT_DEC</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, uart.o(i.GLCD_OUT_DEC))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GLCD_OUT_DEC &rArr; GLCD_CHAR_SET
</UL>
<BR>[Calls]<UL><LI><a href="#[20ba440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CHAR_SET
<LI><a href="#[20ba47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CHAR_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20ba080]"></a>GLCD_OUT_STR</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, uart.o(i.GLCD_OUT_STR))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GLCD_OUT_STR &rArr; GLCD_CHAR_SET
</UL>
<BR>[Calls]<UL><LI><a href="#[20ba440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CHAR_SET
<LI><a href="#[20ba47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CHAR_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20ba044]"></a>GLCD_POINT_CLR</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, uart.o(i.GLCD_POINT_CLR))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GLCD_POINT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[20ba1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_FILL
</UL>

<P><STRONG><a name="[20ba008]"></a>GLCD_POINT_DRW</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, uart.o(i.GLCD_POINT_DRW))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GLCD_POINT_DRW
</UL>
<BR>[Called By]<UL><LI><a href="#[20ba1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_FILL
</UL>

<P><STRONG><a name="[20b9e28]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[20b9cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[20b9d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[20b9dec]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[20b9cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[20b9d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20b9db0]"></a>GPIOPinConfigure</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20b9d38]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[20b9dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[20b9e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20b9cfc]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[20b9dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[20b9e28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[20ba170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[20b9c84]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[20ba0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[20ba134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[20ba170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[20ba38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
<LI><a href="#[20ba3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS2_ENABLE
<LI><a href="#[20ba404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS1_ENABLE
<LI><a href="#[20be5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[20b9c48]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[20b0cd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20b9bd0]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[20ba170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[20b9b94]"></a>UARTCharGetNonBlocking</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UARTCharGetNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[20be5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[20be5a4]"></a>UARTIntHandler</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, uart.o(i.UARTIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[20b9b94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGetNonBlocking
<LI><a href="#[20b9c84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[20b9b58]"></a>UARTStdioInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uartstdio.o(i.UARTStdioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UARTStdioInit &rArr; UARTStdioInitExpClk
</UL>
<BR>[Calls]<UL><LI><a href="#[20b84d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[20b9e64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20b84d8]"></a>UARTStdioInitExpClk</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioInitExpClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTStdioInitExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[20b9b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
</UL>

<P><STRONG><a name="[33566ec]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[33566b0]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3356674]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[20b9edc]"></a>delayTime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.delayTime))
<BR><BR>[Called By]<UL><LI><a href="#[20ba0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[20ba134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[20ba170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[20b9e64]"></a>main</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, uart.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = main &rArr; GLCD_OUT_DEC &rArr; GLCD_CHAR_SET
</UL>
<BR>[Calls]<UL><LI><a href="#[20b9b58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
<LI><a href="#[20b9c48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[20b9cfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[20b9d38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[20b9db0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[20b9dec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[20ba080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_STR
<LI><a href="#[20ba0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DEC
<LI><a href="#[20ba170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[20ba1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_FILL
<LI><a href="#[20ba38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[20be7fc]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[20be7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[20be7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[20be7c0]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[20be7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[20be7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[20be784]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[20be784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20be784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
