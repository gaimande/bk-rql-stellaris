<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Sat Sep 29 09:11:00 2012
<BR><P>
<H3>Maximum Stack Usage =         84 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; GLCD_DRW_LINE &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[22ae61c]">Reset_Handler</a>
 <LI><a href="#[22ae7fc]">NmiSR</a>
 <LI><a href="#[22ae7c0]">FaultISR</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[22aa7c4]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22aa7c4]">UARTCharPut</a><BR>
 <LI><a href="#[22ae7fc]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22ae7fc]">NmiSR</a><BR>
 <LI><a href="#[22ae7c0]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22ae7c0]">FaultISR</a><BR>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22ae784]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[22ae61c]">Reset_Handler</a>
 <LI><a href="#[22ae7fc]">NmiSR</a>
 <LI><a href="#[22ae7c0]">FaultISR</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae5a4]">UARTIntHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22ae784]">IntDefaultHandler</a>
 <LI><a href="#[22aa968]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[22ae61c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[33f7b10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[33f7b10]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[22ae61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[33f61fc]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[33f60d0]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[33f51d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[33f6094]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[33f51d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[33f5fa4]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[22a31e0]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[33f84e8]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[22a31a4]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[22aa878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[33fd678]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[22a321c]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[22a3258]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[22aa65c]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33f77c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[33f7804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[22aad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
<LI><a href="#[33f7840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[22aa5a8]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[22aa65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[22aad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[33f7840]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22aa65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[22aa5e4]"></a>__aeabi_fmul</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[22aad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[22aa620]"></a>__aeabi_fdiv</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[33f77c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[22aad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[22aa56c]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33f7804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22aad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[22aa4f4]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33f7804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22aad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[22aa698]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22aad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[33f5824]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[33f77c8]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22aa620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[22aa65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[33f7804]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[22aa56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[22aa65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[33f51d0]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33f6094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[33f60d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[33f5194]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[33f4a50]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[33f4a14]"></a>__decompress1</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[22aaecc]"></a>GLCD_CHAR_CLR</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, uart.o(i.GLCD_CHAR_CLR))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GLCD_CHAR_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[22aab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_STR
</UL>

<P><STRONG><a name="[22aae90]"></a>GLCD_CHAR_SET</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, uart.o(i.GLCD_CHAR_SET))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GLCD_CHAR_SET
</UL>
<BR>[Called By]<UL><LI><a href="#[22aab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_STR
</UL>

<P><STRONG><a name="[22aae54]"></a>GLCD_CS1_ENABLE</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uart.o(i.GLCD_CS1_ENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_CS1_ENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[22aa8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[22aaddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[22aae18]"></a>GLCD_CS2_ENABLE</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uart.o(i.GLCD_CS2_ENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_CS2_ENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[22aa8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[22aaddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[22aaddc]"></a>GLCD_DISPLAY</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, uart.o(i.GLCD_DISPLAY))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GLCD_DISPLAY &rArr; GLCD_OUT_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[22aa8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[22aab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[22aabc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[22aae18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS2_ENABLE
<LI><a href="#[22aae54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS1_ENABLE
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22aad28]"></a>GLCD_DRW_LINE</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, uart.o(i.GLCD_DRW_LINE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GLCD_DRW_LINE &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[22aa4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[22aa56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[22aa5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[22aa5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[22aa620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[22aa65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[22aa698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[22aaa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_DRW
<LI><a href="#[22aaad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22aacb0]"></a>GLCD_DRW_REC_SOLID</STRONG> (Thumb, 82 bytes, Stack size 28 bytes, uart.o(i.GLCD_DRW_REC_SOLID))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GLCD_DRW_REC_SOLID &rArr; GLCD_POINT_DRW
</UL>
<BR>[Calls]<UL><LI><a href="#[22aaa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_DRW
<LI><a href="#[22aaad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22aac38]"></a>GLCD_FILL</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, uart.o(i.GLCD_FILL))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GLCD_FILL &rArr; GLCD_POINT_DRW
</UL>
<BR>[Calls]<UL><LI><a href="#[22aaa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_DRW
<LI><a href="#[22aaad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22aabfc]"></a>GLCD_INIT</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, uart.o(i.GLCD_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GLCD_INIT &rArr; GLCD_OUT_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[22aa83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[22aa8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[22aa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[22aabc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22aabc0]"></a>GLCD_OUT_CMD</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, uart.o(i.GLCD_OUT_CMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GLCD_OUT_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[22aa8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[22aabfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[22aaddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[22aab84]"></a>GLCD_OUT_DATA</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, uart.o(i.GLCD_OUT_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GLCD_OUT_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[22aa8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[22aaddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[22aab0c]"></a>GLCD_OUT_STR</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, uart.o(i.GLCD_OUT_STR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GLCD_OUT_STR &rArr; GLCD_CHAR_SET
</UL>
<BR>[Calls]<UL><LI><a href="#[22aae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CHAR_SET
<LI><a href="#[22aaecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CHAR_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22aaad0]"></a>GLCD_POINT_CLR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart.o(i.GLCD_POINT_CLR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_POINT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[22aac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_FILL
<LI><a href="#[22aacb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_REC_SOLID
<LI><a href="#[22aad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[22aaa94]"></a>GLCD_POINT_DRW</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart.o(i.GLCD_POINT_DRW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_POINT_DRW
</UL>
<BR>[Called By]<UL><LI><a href="#[22aac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_FILL
<LI><a href="#[22aacb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_REC_SOLID
<LI><a href="#[22aad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[22a5b20]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[22aa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>

<P><STRONG><a name="[22a5a30]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[22aa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>

<P><STRONG><a name="[22aa92c]"></a>GPIOPinConfigure</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22aa8f0]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[22a5a30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[22a5b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[22aabfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[22aa8b4]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[22aab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[22aabc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[22aabfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[22aaddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
<LI><a href="#[22aae18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS2_ENABLE
<LI><a href="#[22aae54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS1_ENABLE
<LI><a href="#[22ae5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[22aa878]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[22a31a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22aa83c]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[22aabfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[22aa800]"></a>UARTCharGetNonBlocking</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UARTCharGetNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[22ae5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[22aa7c4]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[22aa7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[22aa7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[22aa968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[22ae5a4]"></a>UARTIntHandler</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, uart.o(i.UARTIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[22aa800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGetNonBlocking
<LI><a href="#[22aa8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[33f4bb8]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[33f4b7c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[33f4b40]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[22aa968]"></a>main</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, uart.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = main &rArr; GLCD_DRW_LINE &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[22aa7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[22aa878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[22aa8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[22aa8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[22aa92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[22aab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_STR
<LI><a href="#[22aabfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[22aac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_FILL
<LI><a href="#[22aacb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_REC_SOLID
<LI><a href="#[22aad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
<LI><a href="#[22aaddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[22ae7fc]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[22ae7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[22ae7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[22ae7c0]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[22ae7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[22ae7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[22ae784]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[22ae784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22ae784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
