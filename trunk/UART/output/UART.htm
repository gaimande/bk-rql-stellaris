<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Tue Oct 02 19:56:22 2012
<BR><P>
<H3>Maximum Stack Usage =        120 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; UARTprintf &rArr; UARTwrite
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[227e61c]">Reset_Handler</a>
 <LI><a href="#[227e7fc]">NmiSR</a>
 <LI><a href="#[227e7c0]">FaultISR</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[227e7fc]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[227e7fc]">NmiSR</a><BR>
 <LI><a href="#[227e7c0]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[227e7c0]">FaultISR</a><BR>
 <LI><a href="#[227e784]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[227e784]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[227e61c]">Reset_Handler</a>
 <LI><a href="#[227e7fc]">NmiSR</a>
 <LI><a href="#[227e7c0]">FaultISR</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e5a4]">UARTIntHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227e784]">IntDefaultHandler</a>
 <LI><a href="#[227a47c]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[227e61c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[33ee1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[33ee1c0]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[227e61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[33ec8ac]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[33ec780]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[33eb880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[33ec744]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[33eb880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[33ec654]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[22718cc]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[33eeb98]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[2271890]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[227a2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[33f3d64]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[2271908]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[2271944]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[227a080]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33ede78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[33edeb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2279fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[227a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
<LI><a href="#[33edef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[2279fcc]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[227a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[227a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[33edef0]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[227a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[227a008]"></a>__aeabi_fmul</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[227a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[227a044]"></a>__aeabi_fdiv</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[33ede78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[227a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[2279f90]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33edeb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[227a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[2279f18]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33edeb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[227a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[227a0bc]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[33ebed4]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[33ede78]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[227a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[33edeb4]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2279f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2279f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[227a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[33eb880]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33ec744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[33ec780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[33eb844]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[227a9a4]"></a>GLCD_CS1_ENABLE</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uart.o(i.GLCD_CS1_ENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_CS1_ENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[227a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[227a92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[227a968]"></a>GLCD_CS2_ENABLE</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uart.o(i.GLCD_CS2_ENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_CS2_ENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[227a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[227a92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[227a92c]"></a>GLCD_DISPLAY</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, uart.o(i.GLCD_DISPLAY))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GLCD_DISPLAY &rArr; GLCD_OUT_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[227a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[227a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[227a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[227a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS2_ENABLE
<LI><a href="#[227a9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS1_ENABLE
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a878]"></a>GLCD_DRW_LINE</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, uart.o(i.GLCD_DRW_LINE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GLCD_DRW_LINE &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2279f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2279f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2279fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[227a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[227a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[227a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[227a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[227a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_DRW
<LI><a href="#[227a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a800]"></a>GLCD_DRW_REC_SOLID</STRONG> (Thumb, 82 bytes, Stack size 28 bytes, uart.o(i.GLCD_DRW_REC_SOLID))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GLCD_DRW_REC_SOLID &rArr; GLCD_POINT_DRW
</UL>
<BR>[Calls]<UL><LI><a href="#[227a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_DRW
<LI><a href="#[227a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a788]"></a>GLCD_FILL</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, uart.o(i.GLCD_FILL))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GLCD_FILL &rArr; GLCD_POINT_DRW
</UL>
<BR>[Calls]<UL><LI><a href="#[227a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_DRW
<LI><a href="#[227a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_POINT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a74c]"></a>GLCD_INIT</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, uart.o(i.GLCD_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GLCD_INIT &rArr; GLCD_OUT_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[227a29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[227a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[227a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[227a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a710]"></a>GLCD_OUT_CMD</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, uart.o(i.GLCD_OUT_CMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GLCD_OUT_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[227a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[227a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[227a92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[227a6d4]"></a>GLCD_OUT_DATA</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, uart.o(i.GLCD_OUT_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GLCD_OUT_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[227a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[227a92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[227a620]"></a>GLCD_POINT_CLR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart.o(i.GLCD_POINT_CLR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_POINT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[227a788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_FILL
<LI><a href="#[227a800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_REC_SOLID
<LI><a href="#[227a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[227a5e4]"></a>GLCD_POINT_DRW</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart.o(i.GLCD_POINT_DRW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_POINT_DRW
</UL>
<BR>[Called By]<UL><LI><a href="#[227a788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_FILL
<LI><a href="#[227a800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_REC_SOLID
<LI><a href="#[227a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
</UL>

<P><STRONG><a name="[2274158]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[227a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[227a38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[227a440]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[227a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[227a38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a404]"></a>GPIOPinConfigure</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a3c8]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[227a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyMatrix
</UL>

<P><STRONG><a name="[227a38c]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[2274158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[227a440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a350]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[2274158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[227a440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[227a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[227a314]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[227a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyMatrix
<LI><a href="#[227a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[227a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[227a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[227a92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
<LI><a href="#[227a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS2_ENABLE
<LI><a href="#[227a9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS1_ENABLE
<LI><a href="#[227e5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[227a2d8]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[2271890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a5a8]"></a>ScanKeyMatrix</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, uart.o(i.ScanKeyMatrix))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ScanKeyMatrix
</UL>
<BR>[Calls]<UL><LI><a href="#[227a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[227a3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a29c]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[227a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[227a260]"></a>UARTCharGetNonBlocking</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UARTCharGetNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[227e5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[227e5a4]"></a>UARTIntHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, uart.o(i.UARTIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[227a260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGetNonBlocking
<LI><a href="#[227a314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[227a530]"></a>UARTSend</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, uart.o(i.UARTSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[227a224]"></a>UARTStdioInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uartstdio.o(i.UARTStdioInit))
<BR><BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2278b68]"></a>UARTStdioInitExpClk</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioInitExpClk), UNUSED)

<P><STRONG><a name="[227a1e8]"></a>UARTprintf</STRONG> (Thumb, 428 bytes, Stack size 72 bytes, uartstdio.o(i.UARTprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[2278ab4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[227a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2278ab4]"></a>UARTwrite</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, uartstdio.o(i.UARTwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[227a1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[33eb268]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[33eb22c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[33eb1f0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[227a47c]"></a>main</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, uart.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[227a1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[227a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
<LI><a href="#[227a2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[227a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[227a38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[227a404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[227a440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[227a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[227a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyMatrix
<LI><a href="#[227a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[227a788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_FILL
<LI><a href="#[227a800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_REC_SOLID
<LI><a href="#[227a878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DRW_LINE
<LI><a href="#[227a92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[227e7fc]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[227e7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[227e7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[227e7c0]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[227e7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[227e7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[227e784]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[227e784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[227e784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
