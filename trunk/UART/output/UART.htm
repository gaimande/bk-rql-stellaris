<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Wed Oct 03 01:28:51 2012
<BR><P>
<H3>Maximum Stack Usage =        104 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; UARTprintf &rArr; UARTwrite
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[218e61c]">Reset_Handler</a>
 <LI><a href="#[218e7fc]">NmiSR</a>
 <LI><a href="#[218e7c0]">FaultISR</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[218a044]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[218a044]">SysCtlDelay</a><BR>
 <LI><a href="#[218e7fc]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[218e7fc]">NmiSR</a><BR>
 <LI><a href="#[218e7c0]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[218e7c0]">FaultISR</a><BR>
 <LI><a href="#[218e784]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[218e784]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[218e61c]">Reset_Handler</a>
 <LI><a href="#[218e7fc]">NmiSR</a>
 <LI><a href="#[218e7c0]">FaultISR</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e5a4]">UARTIntHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218e784]">IntDefaultHandler</a>
 <LI><a href="#[218a224]">main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[218e61c]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[33d1be4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[33d1be4]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[218e61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[33d02d0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[33d01a4]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[33cf2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[33d0168]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[33cf2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[33d0078]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[218a044]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[218a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[218a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21812b4]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[33d25bc]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[2181278]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[218a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[33d7788]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[21812f0]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[218132c]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[33cf2a4]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33d0168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[33d01a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[33cf268]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[33ceb24]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[33ceae8]"></a>__decompress2</STRONG> (Thumb, 96 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[218a788]"></a>GLCD_CS1_ENABLE</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uart.o(i.GLCD_CS1_ENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_CS1_ENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[218a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[218a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[218a74c]"></a>GLCD_CS2_ENABLE</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, uart.o(i.GLCD_CS2_ENABLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_CS2_ENABLE
</UL>
<BR>[Calls]<UL><LI><a href="#[218a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[218a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[218a710]"></a>GLCD_DISPLAY</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, uart.o(i.GLCD_DISPLAY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GLCD_DISPLAY &rArr; GLCD_OUT_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[218a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[218a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[218a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[218a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS2_ENABLE
<LI><a href="#[218a788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS1_ENABLE
</UL>
<BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218a530]"></a>GLCD_IMAGE</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.GLCD_IMAGE))
<BR><BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218a4f4]"></a>GLCD_INIT</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, uart.o(i.GLCD_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GLCD_INIT &rArr; GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[218a008]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[218a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[218a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[218a29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayTime
<LI><a href="#[218a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
</UL>
<BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218a4b8]"></a>GLCD_OUT_CMD</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, uart.o(i.GLCD_OUT_CMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_OUT_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[218a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[218a29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[218a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[218a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[218a47c]"></a>GLCD_OUT_DATA</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, uart.o(i.GLCD_OUT_DATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GLCD_OUT_DATA
</UL>
<BR>[Calls]<UL><LI><a href="#[218a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[218a29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayTime
</UL>
<BR>[Called By]<UL><LI><a href="#[218a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>

<P><STRONG><a name="[2183b40]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[218a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[218a134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[218a1e8]"></a>GPIOPadConfigSet</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[218a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[218a134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218a1ac]"></a>GPIOPinConfigure</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218a170]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[218a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyMatrix
</UL>

<P><STRONG><a name="[218a134]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOInput
</UL>
<BR>[Calls]<UL><LI><a href="#[2183b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[218a1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218a0f8]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOPinTypeGPIOOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[2183b40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
<LI><a href="#[218a1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[218a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[218a0bc]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[218a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyMatrix
<LI><a href="#[218a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[218a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[218a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[218a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
<LI><a href="#[218a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS2_ENABLE
<LI><a href="#[218a788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_CS1_ENABLE
<LI><a href="#[218e5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[218a080]"></a>IntMasterEnable</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[2181278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218a350]"></a>ScanKeyMatrix</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, uart.o(i.ScanKeyMatrix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ScanKeyMatrix
</UL>
<BR>[Calls]<UL><LI><a href="#[218a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[218a170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218a008]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[218a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[2189fcc]"></a>UARTCharGetNonBlocking</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UARTCharGetNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[218e5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntHandler
</UL>

<P><STRONG><a name="[218e5a4]"></a>UARTIntHandler</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, uart.o(i.UARTIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2189fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGetNonBlocking
<LI><a href="#[218a0bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[218a2d8]"></a>UARTSend</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, uart.o(i.UARTSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2189f90]"></a>UARTStdioInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, uartstdio.o(i.UARTStdioInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UARTStdioInit &rArr; UARTStdioInitExpClk
</UL>
<BR>[Calls]<UL><LI><a href="#[218876c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInitExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218876c]"></a>UARTStdioInitExpClk</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioInitExpClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTStdioInitExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[2189f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
</UL>

<P><STRONG><a name="[2189f54]"></a>UARTprintf</STRONG> (Thumb, 586 bytes, Stack size 72 bytes, uartstdio.o(i.UARTprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[21886b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[218a224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21886b8]"></a>UARTwrite</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, uartstdio.o(i.UARTwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2189f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[33cec8c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[33cec50]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[33cec14]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[218a29c]"></a>delayTime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.delayTime))
<BR><BR>[Called By]<UL><LI><a href="#[218a47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_DATA
<LI><a href="#[218a4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_OUT_CMD
<LI><a href="#[218a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
</UL>

<P><STRONG><a name="[218a224]"></a>main</STRONG> (Thumb, 444 bytes, Stack size 16 bytes, uart.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = main &rArr; UARTprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[2189f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
<LI><a href="#[2189f90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioInit
<LI><a href="#[218a044]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[218a080]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[218a0f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[218a134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[218a1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[218a1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[218a2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[218a350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanKeyMatrix
<LI><a href="#[218a4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_INIT
<LI><a href="#[218a530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_IMAGE
<LI><a href="#[218a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DISPLAY
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[218e7fc]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[218e7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[218e7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[218e7c0]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[218e7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[218e7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[218e784]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[218e784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[218e784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
